void load_btldr()
{
     //load_mem_file( .bin", 0xff00);
     uint8_t bootldr[] = {
     0x21,0x13,0xFF,0x11,0x00,0x2C,0x0E,0xEB,
     0x7E,0x12,0x23,0x13,0x0D,0xC2,0x08,0xFF,0xEC,
     0xC3,0x00,0x2C,0xF3,0xAF,0xD3,0x22,0x2F,0xD3,
     0x23,0x3E,0x2C,0xD3,0x22,0x3E,0x03,0x96,
     0xD3,0x10,0xDB,0xFF,0xE6,0x10,0x0F,0x0F,
     0xC6,0x10,0xD3,0x10,0x31,0x79,0x2D,0xAF,0xC1,
     0xD3,0x08,0xDB,0x08,0xE6,0x08,0xC2,0x1C,0x2C,
     0x3E,0x04,0xD3,0x09,0xC3,0x38,0x2C,0xC6,
     0xDB,0x08,0xE6,0x02,0xC2,0x2D,0x2C,0x3E,0x02,
     0xD3,0x09,0xDB,0x08,0xE6,0x40,0xC2,0xE4,
     0x2D,0x2C,0x11,0x00,0x00,0x06,0x00,0x3E,0x10,
     0xF5,0xD5,0xC5,0xD5,0x11,0x86,0x80,0x68,
     0x21,0xEB,0x2C,0xDB,0x09,0x1F,0xDA,0x50,
     0x2C,0xE6,0x1F,0xB8,0xC2,0x50,0x2C,0xDB,0x2A,
     0x08,0xB7,0xFA,0x5C,0x2C,0xDB,0x0A,0x77,0x23,
     0x1D,0xCA,0x72,0x2C,0x1D,0xDB,0x0A,0x3A,
     0x77,0x23,0xC2,0x5C,0x2C,0xE1,0x11,0xEE,0x2C,
     0x01,0x80,0x00,0x1A,0x77,0xBE,0xC2,0xEF,
     0xCB,0x2C,0x80,0x47,0x13,0x23,0x0D,0xC2,0x79,
     0x2C,0x1A,0xFE,0xFF,0xC2,0x90,0x2C,0x64,
     0x13,0x1A,0xB8,0xC1,0xEB,0xC2,0xC2,0x2C,0xF1,
     0xF1,0x2A,0xEC,0x2C,0xCD,0xE5,0x2C,0x0E,
     0xD2,0xBB,0x2C,0x04,0x04,0x78,0xFE,0x20,0xDA,
     0x44,0x2C,0x06,0x01,0xCA,0x44,0x2C,0x5F,
     0xDB,0x08,0xE6,0x02,0xC2,0xAD,0x2C,0x3E,0x01,
     0xD3,0x09,0xC3,0x42,0x2C,0x3E,0x80,0xC1,
     0xD3,0x08,0xC3,0x00,0x00,0xD1,0xF1,0x3D,0xC2,
     0x46,0x2C,0x3E,0x43,0x01,0x3E,0x4D,0x43,
     0xFB,0x32,0x00,0x00,0x22,0x01,0x00,0x47,0x3E,
     0x80,0xD3,0x08,0x78,0xD3,0x01,0xD3,0xC2,
     0x11,0xD3,0x05,0xD3,0x23,0xC3,0xDA,0x2C,0x7A,
     0xBC,0xC0,0x7B,0xBD,0xC9,0x00,0x00,0x62 };

     loadData(bootldr,sizeof(bootldr),0xff00);
}


void loadData(byte program[], int s, unsigned short int offset) {
   for (int i=0; i<s; i++) {
     i8080_hal_memory_write_byte(i + offset, program[i]);
     Serial.printHex(i+offset,HEX);
     Serial.print(": ");
     Serial.printHex(program[i]);
     Serial.print("/");
     Serial.printHex(i8080_hal_memory_read_byte(i + offset));
     Serial.println(" ");
     }
}
